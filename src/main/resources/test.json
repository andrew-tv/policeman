{
  "name": "CRM service",
  "description": "CRM service tests",
  "type": "NODE",
  "items": [
    {
      "name": "Custom fields",
      "description": "Custom fields tests",
      "type": "NODE",
      "items": [
        {
          "skip": true,
          "name": "Start kafka producer",
          "description": "Topic event.accounts.user.updated",
          "type": "PRODUCER",
          "task": {
            "params": {
              "client": "accounts_user_updated",
              "bootstrap": "broker:9092",
              "service": "SCHEMA_REGISTRY",
              "topic": "event.accounts.user.updated",
              "schema": {
                "namespace": "MessageTypes.Sharp",
                "type": "record",
                "name": "UserId",
                "fields": [{"name": "Id", "type": "int"}]
              }
            }
          }
        },
        {
          "skip": false,
          "name": "Set no auth user",
          "description": "/noauth/user JWT: Licence=USER, user_id=4, client_id=9",
          "type": "REST",
          "task": {
            "request": {
              "method": "GET",
              "service": "TARGET_NO_AUTH",
              "query": "?type=usr&sub=4&email=adminv@docu.se&user_client_id=9&package_id=1&language_id=1&license_id=3&currency_id=1&components=astring1,astring2,astring3&user_status=1&client_activated=true&versions:user=1&versions:client=2&versions:license=3&versions:package=1&client_id=2&access_type=astring&country_id=1"
            },
            "tests": [
              {
                "data_type": "JSON",
                "operation": "EQUAL",
                "what": "$",
                "expectation": "User is set"
              }
            ]
          }
        },

        {
          "skip": false,
          "name": "get_custom_field_list method",
          "description": "Get all custom fields (without filtering)",
          "type": "REST",
          "task": {
            "request": {
              "method": "POST",
              "service": "TARGET_JSON_RPC",
              "headers":{"Content-Type":["application/json"],"Accept":["application/json"]},
              "body": {
                "jsonrpc": "2.0",
                "method": "get_custom_field_list",
                "id": "912",
                "params": {
                  "query": {
                    "filter": {
                    }
                  }
                }
              }
            },
            "tests": [
              {
                "data_type": "JSON",
                "operation": "EQUAL",
                "what": "$.result.meta.size",
                "expectation": 1
              },
              {
                "data_type": "JSON",
                "operation": "EQUAL",
                "what": "$.result.data[0].name",
                "expectation": "Lida"
              }

            ]
          }
        },

        {
          "skip": true,
          "name": "get all users",
          "description": "Test sql query",
          "type": "SQL_QUERY",
          "task": {
            "query": "SELECT * from Users",
            "database": "MSSQL_DATABASE",
            "tests": [
              {
                "data_type": "JSON",
                "operation": "EQUAL",
                "what": "$[0].Email",
                "expectation": "lida@byggfakta.se"
              }
            ]
          }
        },

        {
          "skip": false,
          "name": "Reset Clients table",
          "description": "Drop, create Clients table and seed it",
          "type": "SQL_SCRIPT",
          "task": {
            "script": "src/main/resources/seeds.sql",
            "database": "MSSQL_DATABASE"
          }
        },

        {
          "skip": false,
          "name": "get all users",
          "description": "Test sql query",
          "type": "SQL_QUERY",
          "task": {
            "query": "SELECT * from Clients where Name = 'Fima'",
            "database": "MSSQL_DATABASE",
            "tests": [
              {
                "data_type": "JSON",
                "operation": "EQUAL",
                "what": "$",
                "expectation": [{"Id":"1","Name":"Fima"}]
              }
            ]
          }
        }

      ]
    }
  ]
}